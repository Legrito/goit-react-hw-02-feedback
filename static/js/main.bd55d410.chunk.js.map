{"version":3,"sources":["Statistics/Statistics.module.scss","FeedbackOptions/FeedbackOptions.module.scss","SectionTitle/SectionTitle.module.scss","Statistics/Statistics.js","FeedbackOptions/FeedbackOptions.js","SectionTitle/SectionTitle.js","NotificationMessage/NotificationMessage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","statistis__wrapper","FeedbackOptions","options","onLeaveFeedback","options__wrapper","map","option","idx","type","name","onClick","Section","title","children","section__title","Notification","message","App","state","addFeedback","e","setState","prevState","target","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","percentage","feedbackType","Object","keys","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,mBAAqB,yC,gBCAvCD,EAAOC,QAAU,CAAC,iBAAmB,4C,gBCArCD,EAAOC,QAAU,CAAC,eAAiB,uC,+LCCtBC,EAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACpD,OACI,qBAAKC,UAAWC,IAAOC,mBAAvB,SACI,gCACE,uCAAUP,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,c,gBCRDI,EAAkB,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,gBACvC,OACA,8BACI,qBAAKL,UAAWC,IAAOK,iBAAvB,SACEF,EAAQG,KAAI,SAACC,EAAQC,GAAT,OACV,wBAAQC,KAAK,SAAmBC,KAAMH,EAAQI,QAASP,EAAvD,SAAyEG,GAA9CC,W,gBCL1BI,EAAU,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAC5B,OACI,oCACI,oBAAIf,UAAWC,IAAOe,eAAtB,SAAuCF,IACtCC,MCNAE,EAAe,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAC1B,OACI,mCACA,4BAAIA,OC+CGC,EA3Cf,4MACEC,MAAQ,CACJzB,KAAM,EACNC,QAAS,EACTC,IAAK,GAJX,EAOAwB,YAAc,SAACC,GACb,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAEG,OAAOd,KAAOa,EAAUF,EAAEG,OAAOd,MAAQ,OAThD,EAaEe,mBAAqB,WACnB,MAA+B,EAAKN,MACpC,OADA,EAAQzB,KAAR,EAAcC,QAAd,EAAuBC,KAd3B,EAkBE8B,gCAAkC,WAChC,IACM7B,EADW,EAAKsB,MAAdzB,MAC0C,IAA5B,EAAK+B,sBAC3B,OAAOE,KAAKC,MAAM/B,IArBtB,4CAwBE,WACE,IAAMA,EAAQgC,KAAKJ,qBACbK,EAAaD,KAAKH,kCAClBK,EAAcC,OAAOC,KAAKJ,KAAKV,OACnC,OACI,sBAAKpB,UAAU,oBAAf,UACE,cAAC,EAAD,CAASc,MAAM,uBAAf,SACE,cAAC,EAAD,CAAiBV,QAAS4B,EAAc3B,gBAAiByB,KAAKT,gBAE/DvB,EAAQ,EACP,cAAC,EAAD,CAASgB,MAAM,aAAf,SACA,cAAC,EAAD,CAAYnB,KAAMmC,KAAKV,MAAMzB,KAAMC,QAASkC,KAAKV,MAAMxB,QAASC,IAAKiC,KAAKV,MAAMvB,IAAKC,MAAOA,EAAOC,mBAAoBgC,MAEvH,cAAC,EAAD,CAAcb,QAAQ,6BArCpC,GAAyBiB,aCKVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bd55d410.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistis__wrapper\":\"Statistics_statistis__wrapper__1HKVc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options__wrapper\":\"FeedbackOptions_options__wrapper__3hTpm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section__title\":\"SectionTitle_section__title__2fZuZ\"};","import styles from './Statistics.module.scss'\r\n\r\nexport const Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return (\r\n        <div className={styles.statistis__wrapper}>\r\n            <div>\r\n              <p>Good: {good}</p>\r\n              <p>Neutral: {neutral}</p>\r\n              <p>Bad: {bad}</p>\r\n              <p>Total: {total}</p>\r\n              <p>Positive feedback: {positivePercentage}% </p>\r\n            </div> \r\n          </div>\r\n    )};","import styles from './FeedbackOptions.module.scss'\r\n\r\nexport const FeedbackOptions = ({ options, onLeaveFeedback}) => {\r\n    return (\r\n    <div>\r\n        <div className={styles.options__wrapper}>\r\n        { options.map((option, idx) => \r\n            <button type=\"button\" key={idx} name={option} onClick={onLeaveFeedback}>{option}</button>\r\n        ) }\r\n        </div>\r\n    </div>\r\n)};\r\n","import styles from './SectionTitle.module.scss'\r\n\r\nexport const Section = ({title, children}) => {\r\n    return (\r\n        <section>\r\n            <h3 className={styles.section__title}>{title}</h3>\r\n            {children}\r\n        </section>\r\n    )};","export const Notification = ({message}) => {\r\n    return (\r\n        <>\r\n        <p>{message}</p>\r\n        </>\r\n    )\r\n}","import './App.css';\nimport { Component } from 'react';\nimport { Statistics } from './Statistics';\nimport { FeedbackOptions } from './FeedbackOptions';\nimport { Section } from './SectionTitle';\nimport { Notification } from './NotificationMessage';\n\nexport class App extends Component {\n  state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    }\n\naddFeedback = (e) => {\n  this.setState(prevState => ({\n    [e.target.name]: prevState[e.target.name] + 1,\n  }));\n};\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  }\n  \n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = good / (this.countTotalFeedback() * 0.01);\n    return Math.round(total);\n  }\n\n  render() {\n    const total = this.countTotalFeedback();\n    const percentage = this.countPositiveFeedbackPercentage();\n    const feedbackType= Object.keys(this.state);\n      return (\n          <div className=\"feedback__wrapper\">\n            <Section title=\"Plese leave feedback\">\n              <FeedbackOptions options={feedbackType} onLeaveFeedback={this.addFeedback} />\n            </Section>\n            {total > 0 \n            ? <Section title=\"Statistics\">\n              <Statistics good={this.state.good} neutral={this.state.neutral} bad={this.state.bad} total={total} positivePercentage={percentage} />\n              </Section> \n            : <Notification message=\"No feedback given\" />}                         \n          </div>\n      )\n  }\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}